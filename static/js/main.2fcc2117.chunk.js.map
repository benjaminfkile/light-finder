{"version":3,"sources":["Nav/NavImage/NavImage.js","Nav/Nav.js","Map/Map.js","Map/NightMode.js","Snow/Snow.js","App.js","index.js"],"names":["NavImage","className","src","this","props","lights","picture","alt","height","width","Component","Nav","hideLanding","setState","showLandingContainer","launchNavigation","console","log","state","showNavContainer","navLink","targetLat","targetLng","rating","i","targetRating","push","key","Math","random","showPictureBox","href","target","rel","onClick","hidePictureBox","type","id","Map","onScriptLoad","bind","map","window","google","maps","document","getElementById","options","onMapLoad","s","createElement","x","getElementsByTagName","parentNode","insertBefore","addEventListener","e","style","mapStyles","elementType","stylers","color","featureType","Snow","aria-hidden","App","getLights","fetch","then","response","json","data","catch","error","alert","infoWindows","centerLat","centerLng","length","center","lat","lng","zoom","fullscreenControl","zoomControl","streetViewControl","mapTypeControl","styles","mapIcon","MarkerImage","floor","Size","Marker","position","parseFloat","label","icon","addListener","url","ReactDOM","render"],"mappings":"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","file":"static/js/main.2fcc2117.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass NavImage extends Component {\n\n    render() {\n\n            return (\n                <div className=\"Nav_Header\">\n                    <img src={this.props.lights.picture} alt='loading' height={250} width={400}></img>\n                </div>\n            )\n    }\n}\n\nexport default NavImage;","import React, { Component } from 'react';\nimport NavImage from './NavImage/NavImage'\nimport './Nav.css'\n\nclass Nav extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showLandingContainer: true,\n            showNavContainer: false\n        }\n    }\n\n    hideLanding = () => {\n        this.setState({ showLandingContainer: false });\n    }\n\n    launchNavigation = () => {\n        //window.open(args)\n        console.log('click');\n    }\n\n    render() {\n        let navLink = 'https://www.google.com/maps/search/?api=1&query=' + this.props.targetLat + ',' + this.props.targetLng\n        if (this.props.targetLat) {\n            let rating = [];\n            for (let i = 0; i < 5; i++) {\n                if (i < this.props.targetRating) {\n                    rating.push(\n                        <img src=\"./res/star.png\" alt=\"*\" height=\"30\" width=\"30\" key={Math.random()}></img>\n                    )\n                }\n            }\n            return (\n\n                this.props.showPictureBox && <div className=\"Nav_Container\">\n                    <NavImage\n                        lights={this.props}\n                    />\n                    <li>\n                        {rating}\n                    </li>\n                    <a href={navLink} target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"./res/navi-btn.png\" alt=\"Directions\" height={50} width={50} /> &nbsp;</a>\n                    <br></br>\n                    <input onClick={this.props.hidePictureBox} type=\"image\" id=\"Close_Nav_Btn\" alt=\"Login\"\n                        src=\"./res/close.png\"></input>\n                </div>\n            )\n        } else {\n            if (!this.props.targetLat) {\n                return (\n                    this.state.showLandingContainer && <div className=\"Landing_Container\">\n                        <img src=\"./res/hat.png\" alt=\"A Hat\" height=\"100vh\" width=\"100vw\"></img>\n                        <h1>Powered by Google Maps</h1>\n                        <br></br>\n                        <h2>...and Pizza Guys</h2>\n                        <br></br>\n                        <h3>Click on a marker to get directions to christmas lights</h3>\n                        {/* <button onClick={this.hideLanding}>landing</button> */}\n                        <br></br>\n                        <input onClick={this.hideLanding} type=\"image\" id=\"Close_Landing_Btn\" alt=\"Login\"\n                            src=\"./res/close.png\"></input>\n\n                    </div>\n                )\n            }\n        }\n    }\n}\n\nexport default Nav;","import React, { Component } from 'react';\nimport \"./Map.css\";\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.onScriptLoad = this.onScriptLoad.bind(this)\n  }\n\n  onScriptLoad() {\n    const map = new window.google.maps.Map(\n      document.getElementById(this.props.id),\n      this.props.options);\n      this.props.onMapLoad(map)\n  }\n\n  componentDidMount() { \n    if (!window.google) {\n      var s = document.createElement('script');\n      s.type = 'text/javascript';\n      s.src = `https://maps.google.com/maps/api/js?key=AIzaSyAj6zqW55nq95JI6gGGj-BtkN_hfZhJScM`;\n      // s.src = `https://maps.google.com/maps/api/js`;\n      var x = document.getElementsByTagName('script')[0];\n      x.parentNode.insertBefore(s, x);\n      s.addEventListener('load', e => {\n        this.onScriptLoad()\n      })\n    } else {\n      this.onScriptLoad()\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Map\" style={{ width: \"100vw\", height: \"100vh\"}} id={this.props.id} />\n    );\n  }\n}\n\nexport default Map","export const mapStyles = [\n    {elementType: 'geometry', stylers: [{color: '#242f3e'}]},\n    {elementType: 'labels.text.stroke', stylers: [{color: '#242f3e'}]},\n    {elementType: 'labels.text.fill', stylers: [{color: '#746855'}]},\n    {\n      featureType: 'administrative.locality',\n      elementType: 'labels.text.fill',\n      stylers: [{color: '#d59563'}]\n    },\n    {\n      featureType: 'poi',\n      elementType: 'labels.text.fill',\n      stylers: [{color: '#d59563'}]\n    },\n    {\n      featureType: 'poi.park',\n      elementType: 'geometry',\n      stylers: [{color: '#263c3f'}]\n    },\n    {\n      featureType: 'poi.park',\n      elementType: 'labels.text.fill',\n      stylers: [{color: '#6b9a76'}]\n    },\n    {\n      featureType: 'road',\n      elementType: 'geometry',\n      stylers: [{color: '#38414e'}]\n    },\n    {\n      featureType: 'road',\n      elementType: 'geometry.stroke',\n      stylers: [{color: '#212a37'}]\n    },\n    {\n      featureType: 'road',\n      elementType: 'labels.text.fill',\n      stylers: [{color: '#9ca5b3'}]\n    },\n    {\n      featureType: 'road.highway',\n      elementType: 'geometry',\n      stylers: [{color: '#746855'}]\n    },\n    {\n      featureType: 'road.highway',\n      elementType: 'geometry.stroke',\n      stylers: [{color: '#1f2835'}]\n    },\n    {\n      featureType: 'road.highway',\n      elementType: 'labels.text.fill',\n      stylers: [{color: '#f3d19c'}]\n    },\n    {\n      featureType: 'transit',\n      elementType: 'geometry',\n      stylers: [{color: '#2f3948'}]\n    },\n    {\n      featureType: 'transit.station',\n      elementType: 'labels.text.fill',\n      stylers: [{color: '#d59563'}]\n    },\n    {\n      featureType: 'water',\n      elementType: 'geometry',\n      stylers: [{color: '#17263c'}]\n    },\n    {\n      featureType: 'water',\n      elementType: 'labels.text.fill',\n      stylers: [{color: '#515c6d'}]\n    },\n    {\n      featureType: 'water',\n      elementType: 'labels.text.stroke',\n      stylers: [{color: '#17263c'}]\n    }\n  ]","import React, { Component } from 'react'\n\nclass Snow extends Component {\n\n    render() {\n\n        return (\n\n            <div className=\"snowflakes\" aria-hidden=\"true\">\n                <div className=\"snowflake\" key={Math.random}>\n                    ❅\n            </div>\n                <div className=\"snowflake\">\n                    ❆\n            </div>\n                <div className=\"snowflake\">\n                    ❅\n            </div>\n                <div className=\"snowflake\">\n                    ❆\n            </div>\n                <div className=\"snowflake\">\n                    ❅\n            </div>\n                <div className=\"snowflake\">\n                    ❆\n            </div>\n                <div className=\"snowflake\">\n                    ❅\n            </div>\n                <div className=\"snowflake\">\n                    ❆\n            </div>\n                <div className=\"snowflake\">\n                    ❅\n            </div>\n                <div className=\"snowflake\">\n                    ❆\n            </div>\n                <div className=\"snowflake\">\n                    ❅\n            </div>\n                <div className=\"snowflake\">\n                    ❆\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Snow;","import React, { Component } from 'react'\n//import { render } from 'react-dom'\nimport Nav from './Nav/Nav'\nimport Map from './Map/Map'\nimport { mapStyles } from './Map/NightMode.js'\nimport Snow from './Snow/Snow'\nimport './App.css'\n//fix git\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      lights: [],\n      infoWindows: [],\n      centerLat: 46.833,\n      centerLng: -114.030,\n      targetLat: null,\n      targetLng: null,\n      targetRating: null,\n      picture: null,\n      showPictureBox: false\n    }\n  }\n\n  componentDidMount() {\n    this.getLights();\n  }\n\n  getLights = () => {\n    let targetUrl = 'https://agile-wildwood-40014.herokuapp.com/api/lights/';\n    fetch(targetUrl)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ lights: data })\n      })\n      .catch(error => alert('oops'));\n\n  }\n\n  hidePictureBox = () => {\n    this.setState({ showPictureBox: false })\n  }\n\n\n  render() {\n\n    return (\n\n      <div className=\"App_Container\">\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"//fonts.googleapis.com/css?family=Mountains+of+Christmas\" />\n\n        <Nav\n          lights={this.state.lights}\n          picture={this.state.picture}\n          targetLat={this.state.targetLat}\n          targetLng={this.state.targetLng}\n          targetRating={this.state.targetRating}\n          showPictureBox={this.state.showPictureBox}\n          hidePictureBox={this.hidePictureBox}\n\n        />\n        {this.state.lights.length === 0 &&\n        \n         <div className=\"Splash_Screen\">\n           <h1>\n             Fetching Lights\n           </h1>\n           <br></br>\n           <h2>\n             please wait...\n           </h2>\n           <img src=\"./res/splash.png\" alt='A tree'></img>\n         </div> \n         } \n        {this.state.lights.length > 0 &&\n          <div className=\"Map_Container\">\n            <Map\n              id=\"Map\"\n              options={{\n                center: { lat: this.state.centerLat, lng: this.state.centerLng },\n                zoom: 13,\n                fullscreenControl: false,\n                zoomControl: true,\n                streetViewControl: false,\n                mapTypeControl: false,\n                styles: mapStyles\n              }}\n              onMapLoad={map => {\n                for (let i = 0; i < this.state.lights.length; i++) {\n                  let mapIcon = new window.google.maps.MarkerImage(\n                    './res/' + Math.floor((Math.random() * (23 - 1) + 1)) + '.png',\n                    null,\n                    null,\n                    null,\n                    new window.google.maps.Size(40, 40)\n                  );\n                  const marker = new window.google.maps.Marker(\n                    {\n                      position: { lat: parseFloat(this.state.lights[i].lat), lng: parseFloat(this.state.lights[i].lng) },\n                      map: map,\n                      label: '',\n                      icon: mapIcon\n                    });\n                  marker.addListener('click', e => {\n                    this.setState({ picture: this.state.lights[i].url });\n                    this.setState({ targetLat: this.state.lights[i].lat });\n                    this.setState({ targetLng: this.state.lights[i].lng });\n                    this.setState({ targetRating: this.state.lights[i].rating });\n                    this.setState({ showPictureBox: true });\n                  })\n                }\n              }}\n            />\n          </div>}\n        <Snow\n        // credit to https://pajasevi.github.io/CSSnowflakes/\n        />\n      </div>\n    );\n  }\n}\n\n//render(<App />, document.getElementById('root'));\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n//serviceWorker.unregister();\n"],"sourceRoot":""}